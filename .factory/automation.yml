#
# Copyright (C) 2022 Vaticle
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
config:
  version-candidate: VERSION
  dependencies:
    typeql: [build, release]
    typedb-common: [build, release]
    dependencies: [build]
    typedb-protocol: [build, release]
    typedb-behaviour: [build]
    factory-tracing: [build, release]

build:
  quality:
    filter:
      owner: vaticle
      branch: master
    build-analysis:
      image: vaticle-ubuntu-22.04
      command: |
        SONARCLOUD_CODE_ANALYSIS_CREDENTIAL=$SONARCLOUD_CREDENTIAL \
          bazel run @vaticle_dependencies//tool/sonarcloud:code-analysis -- \
          --project-key=vaticle_typedb_client_java \
          --branch=$FACTORY_BRANCH --commit-id=$FACTORY_COMMIT
    dependency-analysis:
      image: vaticle-ubuntu-22.04
      command: |
        bazel run @vaticle_dependencies//factory/analysis:dependency-analysis
  correctness:
    build:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //...
        bazel run @vaticle_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)') --test_output=errors
    build-dependency:
      image: vaticle-ubuntu-22.04
      command: |
        dependencies/maven/update.sh
        git diff --exit-code dependencies/maven/artifacts.snapshot
        bazel run @vaticle_dependencies//tool/unuseddeps:unused-deps -- list
    test-integration:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel test //test/integration/... --test_output=errors
    test-behaviour-connection-core:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-core.sh //test/behaviour/connection/... --test_output=errors --jobs=1
    # TODO: delete --jobs=1 if we fix the issue with excess memory usage
    test-behaviour-connection-cluster:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-cluster.sh //test/behaviour/connection/... --test_output=errors --jobs=1
    # TODO: delete --jobs=1 if we fix the issue with excess memory usage
    test-behaviour-concept-core:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-core.sh //test/behaviour/concept/... --test_output=errors
#    test-behaviour-concept-cluster:
#      image: vaticle-ubuntu-22.04
#      command: |
#        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
#        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
#        .factory/test-cluster.sh //test/behaviour/concept/... --test_output=errors
    test-behaviour-match-core:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-core.sh //test/behaviour/typeql/language/match/... --test_output=errors
        .factory/test-core.sh //test/behaviour/typeql/language/get/... --test_output=errors
#    test-behaviour-match-cluster:
#      image: vaticle-ubuntu-22.04
#      command: |
#        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
#        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
#        .factory/test-cluster.sh //test/behaviour/typeql/language/match/... --test_output=errors
#        .factory/test-cluster.sh //test/behaviour/typeql/language/get/... --test_output=errors
    test-behaviour-writable-core:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-core.sh //test/behaviour/typeql/language/insert/... --test_output=errors
        .factory/test-core.sh //test/behaviour/typeql/language/delete/... --test_output=errors
        .factory/test-core.sh //test/behaviour/typeql/language/update/... --test_output=errors
    test-behaviour-writable-cluster:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-cluster.sh //test/behaviour/typeql/language/insert/... --test_output=errors
        .factory/test-cluster.sh //test/behaviour/typeql/language/delete/... --test_output=errors
        .factory/test-cluster.sh //test/behaviour/typeql/language/update/... --test_output=errors
    test-behaviour-definable-core:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-core.sh //test/behaviour/typeql/language/define/... --test_output=errors
        .factory/test-core.sh //test/behaviour/typeql/language/undefine/... --test_output=errors
    test-behaviour-definable-cluster:
      image: vaticle-ubuntu-22.04
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-cluster.sh //test/behaviour/typeql/language/define/... --test_output=errors
        .factory/test-cluster.sh //test/behaviour/typeql/language/undefine/... --test_output=errors
    deploy-maven-snapshot:
      image: vaticle-ubuntu-22.04
      dependencies: [
        build, build-dependency,
        test-behaviour-connection-core, #test-behaviour-connection-cluster,
        test-behaviour-concept-core, #test-behaviour-concept-cluster,
        test-behaviour-match-core, #test-behaviour-match-cluster,
        test-behaviour-writable-core, test-behaviour-writable-cluster,
        test-behaviour-definable-core, test-behaviour-definable-cluster
      ]
      filter:
        owner: vaticle
        branch: master
      command: |
        export DEPLOY_MAVEN_USERNAME=$REPO_VATICLE_USERNAME
        export DEPLOY_MAVEN_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-maven -- snapshot
    test-deployment-maven:
      image: vaticle-ubuntu-22.04
      dependencies: [deploy-maven-snapshot]
      filter:
        owner: vaticle
        branch: master
      command: |
        export REPO_DIR="/home/factory/$FACTORY_REPO/"
        export TYPEDB_DIST_DIR="dist/typedb-all-linux/"
        bazel run //test:typedb-extractor-linux -- $TYPEDB_DIST_DIR
        export TYPEDB_SVC_PATH="${REPO_DIR//\//\\/}${TYPEDB_DIST_DIR//\//\\/}"
        bazel run @vaticle_dependencies//tool/util:create-systemd-service -- typedb "${TYPEDB_SVC_PATH}typedb server"
        sudo systemctl daemon-reload
        sudo systemctl start typedb

        sed -i -e "s/CLIENT_JAVA_VERSION_MARKER/$FACTORY_COMMIT/g" test/deployment/pom.xml
        cat test/deployment/pom.xml
        cd test/deployment && mvn test

release:
  filter:
    owner: vaticle
    branch: master
  validation:
    validate-dependencies:
      image: vaticle-ubuntu-22.04
      command: bazel test //:release-validate-deps --test_output=streamed
  deployment:
    deploy-github:
      image: vaticle-ubuntu-22.04
      command: |
        export PYENV_ROOT="/opt/pyenv"
        pyenv install 3.7.9
        pyenv global 3.7.9
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.7.9/lib/python3.7/site-packages/lsb_release.py
        python3 -m pip install certifi
        export NOTES_CREATE_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @vaticle_dependencies//tool/release/notes:create -- $FACTORY_OWNER $FACTORY_REPO $FACTORY_COMMIT $(cat VERSION) ./RELEASE_TEMPLATE.md
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy-github -- $FACTORY_COMMIT
    deploy-maven-release:
      image: vaticle-ubuntu-22.04
      dependencies: [deploy-github]
      command: |
        export DEPLOY_MAVEN_USERNAME=$REPO_VATICLE_USERNAME
        export DEPLOY_MAVEN_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run --define version=$(cat VERSION) //:deploy-maven -- release
