#
# Copyright (C) 2022 Vaticle
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

config:
  version-candidate: VERSION
  dependencies:
    dependencies: [build]
    factory-tracing: [build, release]
    typedb-behaviour: [build]
    typedb-common: [build, release]
    typedb-protocol: [build, release]
    typeql: [build, release]

build:
  quality:
    filter:
      owner: vaticle
      branch: [master, development]
    build-analysis:
      image: vaticle-ubuntu-22.04
      command: |
        SONARCLOUD_CODE_ANALYSIS_CREDENTIAL=$SONARCLOUD_CREDENTIAL \
          bazel run @vaticle_dependencies//tool/sonarcloud:code-analysis -- \
          --project-key=vaticle_typedb_driver_java \
          --branch=$FACTORY_BRANCH --commit-id=$FACTORY_COMMIT
    dependency-analysis:
      image: vaticle-ubuntu-22.04
      command: |
        bazel run @vaticle_dependencies//factory/analysis:dependency-analysis

  correctness:
    build:
      image: vaticle-ubuntu-22.04
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get update
        sudo apt install python3-pip -y
        python3 -m pip install -U pip
        python3 -m pip install -r python/requirements_dev.txt
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //...
        bazel run @vaticle_dependencies//tool/checkstyle:test-coverage
        bazel test $(bazel query 'kind(checkstyle_test, //...)') --test_output=errors
        bazel test $(bazel query 'kind(rustfmt_test, //...)') --@rules_rust//:rustfmt.toml=//rust:rustfmt_config
        cd nodejs
        npm install
        npm run lint

    build-dependency:
      image: vaticle-ubuntu-22.04
      command: |
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        dependencies/maven/update.sh
        git diff --exit-code dependencies/maven/artifacts.snapshot
        bazel run @vaticle_dependencies//tool/unuseddeps:unused-deps -- list

    test-rust-integration-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        bazel test //rust/tests --test_arg=-- --test_arg=integration::queries::core --test_output=streamed && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-rust-integration-enterprise:
      machine: 4-core-16-gb
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh 3 # use source to receive export vars
        bazel test //rust/tests --test_env=ROOT_CA=$ROOT_CA --test_arg=-- --test_arg=integration::queries::enterprise --test_output=streamed && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-rust-integration-runtimes:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh 3 # use source to receive export vars
        bazel test //rust/tests --test_env=ROOT_CA=$ROOT_CA --test_arg=-- --test_arg=integration::runtimes --test_output=streamed && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-rust-behaviour-concept:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh 3 # use source to receive export vars
        bazel test //rust/tests --test_env=ROOT_CA=$ROOT_CA --test_arg=-- --test_arg=behaviour::concept --test_output=streamed && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-rust-behaviour-connection:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh 3 # use source to receive export vars
        bazel test //rust/tests --test_env=ROOT_CA=$ROOT_CA --test_arg=-- --test_arg=behaviour::connection --test_output=streamed && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-rust-behaviour-typeql:
      machine: 8-core-32-gb
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh 3 # use source to receive export vars
        bazel test //rust/tests --test_env=ROOT_CA=$ROOT_CA --test_arg=-- --test_arg=behaviour::typeql --test_output=streamed && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-java-integration:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel test //java/test/integration/... --test_output=errors

    test-java-behaviour-connection-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        .factory/test-core.sh //java/test/behaviour/connection/... --test_output=errors --jobs=1
    # TODO: delete --jobs=1 if we fix the issue with excess memory usage

    test-java-behaviour-connection-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-enterprise.sh //java/test/behaviour/connection/... --test_output=errors --jobs=1
    # TODO: delete --jobs=1 if we fix the issue with excess memory usage

    test-java-behaviour-concept-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-core.sh //java/test/behaviour/concept/... --test_output=errors

    test-java-behaviour-concept-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-enterprise.sh //java/test/behaviour/concept/... --test_output=errors

    test-java-behaviour-match-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-core.sh //java/test/behaviour/typeql/language/match/... --test_output=errors
        .factory/test-core.sh //java/test/behaviour/typeql/language/get/... --test_output=errors
        .factory/test-core.sh //java/test/behaviour/typeql/language/expression/... --test_output=errors

    test-java-behaviour-match-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-enterprise.sh //java/test/behaviour/typeql/language/match/... --test_output=errors
        .factory/test-enterprise.sh //java/test/behaviour/typeql/language/get/... --test_output=errors
        .factory/test-enterprise.sh //java/test/behaviour/typeql/language/expression/... --test_output=errors

    test-java-behaviour-writable-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-core.sh //java/test/behaviour/typeql/language/insert/... --test_output=errors
        .factory/test-core.sh //java/test/behaviour/typeql/language/delete/... --test_output=errors
        .factory/test-core.sh //java/test/behaviour/typeql/language/update/... --test_output=errors

    test-java-behaviour-writable-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-enterprise.sh //java/test/behaviour/typeql/language/insert/... --test_output=errors
        .factory/test-enterprise.sh //java/test/behaviour/typeql/language/delete/... --test_output=errors
        .factory/test-enterprise.sh //java/test/behaviour/typeql/language/update/... --test_output=errors

    test-java-behaviour-definable-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-core.sh //java/test/behaviour/typeql/language/define/... --test_output=errors
        .factory/test-core.sh //java/test/behaviour/typeql/language/undefine/... --test_output=errors

    test-java-behaviour-definable-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        .factory/test-enterprise.sh //java/test/behaviour/typeql/language/define/... --test_output=errors
        .factory/test-enterprise.sh //java/test/behaviour/typeql/language/undefine/... --test_output=errors

    test-python-behaviour-connection-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc

        tool/test/start-core-server.sh
        .factory/test-core.sh //python/tests/behaviour/connection/database/... --test_output=streamed --jobs=1 &&
          .factory/test-core.sh //python/tests/behaviour/connection/session/... --test_output=streamed --jobs=1 &&
          .factory/test-core.sh //python/tests/behaviour/connection/transaction/... --test_output=streamed --jobs=1 &&
          export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-python-behaviour-connection-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc

        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //python/tests/behaviour/connection/database/... --test_env=ROOT_CA=$ROOT_CA --test_output=streamed --jobs=1 &&
          .factory/test-enterprise.sh //python/tests/behaviour/connection/session/... --test_env=ROOT_CA=$ROOT_CA --test_output=streamed --jobs=1 &&
          .factory/test-enterprise.sh //python/tests/behaviour/connection/transaction/... --test_env=ROOT_CA=$ROOT_CA --test_output=streamed --jobs=1 &&
          .factory/test-enterprise.sh //python/tests/behaviour/connection/user/... --test_env=ROOT_CA=$ROOT_CA --test_output=streamed --jobs=1 &&
          export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-python-behaviour-concept-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get update
        sudo apt install python3-pip -y
        python3 -m pip install -U pip
        python3 -m pip install -r python/requirements_dev.txt
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        .factory/test-core.sh //python/tests/behaviour/concept/... --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-python-behaviour-concept-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get update
        sudo apt install python3-pip -y
        python3 -m pip install -U pip
        python3 -m pip install -r python/requirements_dev.txt
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //python/tests/behaviour/concept/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-python-behaviour-match-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get update
        sudo apt install python3-pip -y
        python3 -m pip install -U pip
        python3 -m pip install -r python/requirements_dev.txt
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        .factory/test-core.sh //python/tests/behaviour/typeql/language/match/... --test_output=errors &&
          .factory/test-core.sh //python/tests/behaviour/typeql/language/get/... --test_output=errors &&
          .factory/test-core.sh //python/tests/behaviour/typeql/language/expression/... --test_output=errors &&
          export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-python-behaviour-match-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get update
        sudo apt install python3-pip -y
        python3 -m pip install -U pip
        python3 -m pip install -r python/requirements_dev.txt
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //python/tests/behaviour/typeql/language/match/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors &&
          .factory/test-enterprise.sh //python/tests/behaviour/typeql/language/get/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors &&
          .factory/test-enterprise.sh //python/tests/behaviour/typeql/language/expression/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors &&
          export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-python-behaviour-writable-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get update
        sudo apt install python3-pip -y
        python3 -m pip install -U pip
        python3 -m pip install -r python/requirements_dev.txt
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        .factory/test-core.sh //python/tests/behaviour/typeql/language/insert/... --test_output=errors &&
          .factory/test-core.sh //python/tests/behaviour/typeql/language/delete/... --test_output=errors &&
          .factory/test-core.sh //python/tests/behaviour/typeql/language/update/... --test_output=errors &&
          export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-python-behaviour-writable-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get update
        sudo apt install python3-pip -y
        python3 -m pip install -U pip
        python3 -m pip install -r python/requirements_dev.txt
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //python/tests/behaviour/typeql/language/insert/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors &&
          .factory/test-enterprise.sh //python/tests/behaviour/typeql/language/delete/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors &&
          .factory/test-enterprise.sh //python/tests/behaviour/typeql/language/update/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors &&
          export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-python-behaviour-definable-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get update
        sudo apt install python3-pip -y
        python3 -m pip install -U pip
        python3 -m pip install -r python/requirements_dev.txt
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        .factory/test-core.sh //python/tests/behaviour/typeql/language/define/... --test_output=errors &&
          .factory/test-core.sh //python/tests/behaviour/typeql/language/undefine/... --test_output=errors &&
          export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-python-behaviour-definable-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      type: foreground
      command: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get update
        sudo apt install python3-pip -y
        python3 -m pip install -U pip
        python3 -m pip install -r python/requirements_dev.txt
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //python/tests/behaviour/typeql/language/define/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors &&
          .factory/test-enterprise.sh //python/tests/behaviour/typeql/language/undefine/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors &&
          export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

#    test-python-failover-enterprise:
#      machine: 4-core-16-gb
#      image: vaticle-ubuntu-22.04
#      dependencies:
#        - build
#      type: foreground
#      command: |
#        export PATH="$HOME/.local/bin:$PATH"
#        sudo add-apt-repository ppa:deadsnakes/ppa
#        sudo apt-get update
#        sudo apt install python3.9 python3-pip -y
#        python3.9 -m pip install -U pip
#        python3.9 -m pip install -r python/requirements_dev.txt
#        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
#        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
#        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
#        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
#        bazel test //python/tests/integration:test_enterprise_failover --test_output=errors

    test-nodejs-integration:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //nodejs/...
        cp -rL bazel-bin/nodejs/node_modules nodejs/.
        cp -rL bazel-bin/nodejs/dist nodejs/.
        tool/test/start-core-server.sh
        sleep 10
        node nodejs/test/integration/test-concept.js &&
          node nodejs/test/integration/test-connection.js &&
          node nodejs/test/integration/test-query.js && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-nodejs-enterprise-failover:
      machine: 4-core-16-gb
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel build //nodejs/...
        cp -rL bazel-bin/nodejs/node_modules nodejs/.
        cp -rL bazel-bin/nodejs/dist nodejs/.
        source tool/test/start-enterprise-servers.sh 3 # use source to receive export vars
        node nodejs/test/integration/test-enterprise-failover.js && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-nodejs-behaviour-connection-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        .factory/test-core.sh //nodejs/test/behaviour/connection/database/... --test_output=errors --jobs=1 &&
        .factory/test-core.sh //nodejs/test/behaviour/connection/session/... --test_output=errors --jobs=1 &&
        .factory/test-core.sh //nodejs/test/behaviour/connection/transaction/... --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-nodejs-behaviour-connection-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //nodejs/test/behaviour/connection/database/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 &&
          .factory/test-enterprise.sh //nodejs/test/behaviour/connection/session/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 &&
          .factory/test-enterprise.sh //nodejs/test/behaviour/connection/transaction/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 &&
          .factory/test-enterprise.sh //nodejs/test/behaviour/connection/user/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-nodejs-behaviour-concept-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        .factory/test-core.sh //nodejs/test/behaviour/concept/... --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-nodejs-behaviour-concept-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //nodejs/test/behaviour/concept/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS
    # TODO: Delete --jobs=1 once tests are parallelisable

    test-nodejs-behaviour-match-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        .factory/test-core.sh //nodejs/test/behaviour/typeql/language/match/... --test_output=errors --jobs=1 &&
          .factory/test-core.sh //nodejs/test/behaviour/typeql/language/get/... --test_output=errors --jobs=1 &&
          .factory/test-core.sh //nodejs/test/behaviour/typeql/language/expression/... --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-nodejs-behaviour-match-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //nodejs/test/behaviour/typeql/language/match/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 &&
          .factory/test-enterprise.sh //nodejs/test/behaviour/typeql/language/get/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 &&
          .factory/test-enterprise.sh //nodejs/test/behaviour/typeql/language/expression/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-nodejs-behaviour-writable-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        .factory/test-core.sh //nodejs/test/behaviour/typeql/language/insert/... --test_output=errors --jobs=1 &&
          .factory/test-core.sh //nodejs/test/behaviour/typeql/language/delete/... --test_output=errors --jobs=1 &&
          .factory/test-core.sh //nodejs/test/behaviour/typeql/language/update/... --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-nodejs-behaviour-writable-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //nodejs/test/behaviour/typeql/language/insert/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 &&
          .factory/test-enterprise.sh //nodejs/test/behaviour/typeql/language/delete/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 &&
          .factory/test-enterprise.sh //nodejs/test/behaviour/typeql/language/update/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    test-nodejs-behaviour-definable-core:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        tool/test/start-core-server.sh
        .factory/test-core.sh //nodejs/test/behaviour/typeql/language/define/... --test_output=errors --jobs=1 &&
          .factory/test-core.sh //nodejs/test/behaviour/typeql/language/undefine/... --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-core-server.sh
        exit $TEST_SUCCESS

    test-nodejs-behaviour-definable-enterprise:
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        source tool/test/start-enterprise-servers.sh # use source to receive export vars
        .factory/test-enterprise.sh //nodejs/test/behaviour/typeql/language/define/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 &&
          .factory/test-enterprise.sh //nodejs/test/behaviour/typeql/language/undefine/... --test_env=ROOT_CA=$ROOT_CA --test_output=errors --jobs=1 && export TEST_SUCCESS=0 || export TEST_SUCCESS=1
        tool/test/stop-enterprise-servers.sh
        exit $TEST_SUCCESS

    deploy-crate-snapshot:
      filter:
        owner: vaticle
        branch: [master, development]
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
        - test-integration-core
        - test-integration-enterprise
        - test-integration-runtimes
        - test-behaviour-concept
        - test-behaviour-connection
        - test-behaviour-typeql
      command: |
        export DEPLOY_CRATE_TOKEN=$REPO_VATICLE_CRATES_TOKEN
        bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
        bazel run --define version=$(git rev-parse HEAD) //rust:deploy_crate -- snapshot

    deploy-npm-snapshot:
      filter:
        owner: vaticle
        branch: [master, development]
      image: vaticle-ubuntu-22.04
      dependencies:
        - build
        - test-nodejs-integration
        - test-nodejs-enterprise-failover
        - test-nodejs-behaviour-connection-core
        - test-nodejs-behaviour-connection-enterprise
        - test-nodejs-behaviour-concept-core
        - test-nodejs-behaviour-concept-enterprise
        - test-nodejs-behaviour-match-core
        - test-nodejs-behaviour-match-enterprise
        - test-nodejs-behaviour-writable-core
        - test-nodejs-behaviour-writable-enterprise
        - test-nodejs-behaviour-definable-core
        - test-nodejs-behaviour-definable-enterprise
      command: |
        export DEPLOY_NPM_USERNAME=$REPO_VATICLE_USERNAME
        export DEPLOY_NPM_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //nodejs:deploy-npm -- snapshot
        
# TODO: assembly tests for all drivers to run in factory

release:
  filter:
    owner: vaticle
    branch: master
  validation:
    validate-dependencies:
      image: vaticle-ubuntu-22.04
      command: |
        bazel test //:release-validate-deps --test_output=streamed
        bazel test //python:release-validate-python-deps --test_output=streamed
        bazel test //nodejs:release-validate-nodejs-deps --test_output=streamed
    validate-release-notes:
      image: vaticle-ubuntu-22.04
      command: |
        export NOTES_VALIDATE_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @vaticle_dependencies//tool/release/notes:validate --test_output=streamed -- $FACTORY_OWNER $FACTORY_REPO RELEASE_NOTES_LATEST.md

  deployment:
    trigger-release-circleci:
      image: vaticle-ubuntu-22.04
      command: |
        git checkout -b release
        git push -f origin release
        echo "Successfully pushed branch 'release', which triggers a release workflow in CircleCI. The progress of the release can be tracked there."
